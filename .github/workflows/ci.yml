name: CI

on:
  push:
    branches: [ main, config, develop ]
  pull_request:
    branches: [ main, config, develop ]

permissions:
  contents: read
  actions: write  # allow actions/cache to save new cache entries

jobs:
  build-and-test:
    name: Build & Test (workspace)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry + git + target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            synaptik-workspace/target
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-

      - name: Workspace build
        run: |
          cd synaptik-workspace
          cargo build --workspace --all-features --locked

      - name: Workspace tests
        run: |
          cd synaptik-workspace
          cargo test --workspace --all-features --locked --no-fail-fast

  clippy:
    name: Clippy Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Cache cargo registry + git + target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            synaptik-workspace/target
          key: clippy-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            clippy-${{ runner.os }}-
      - name: Run clippy
        run: |
          cd synaptik-workspace
          cargo clippy --workspace --all-features -- -D warnings

  fmt:
    name: Rustfmt Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Run fmt --check
        run: |
          cd synaptik-workspace
          cargo fmt --all -- --check
