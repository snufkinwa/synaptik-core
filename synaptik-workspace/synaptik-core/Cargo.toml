[package]
name = "synaptik-core"
version = "0.1.0"
edition = "2024"
description = "Synaptik-Core: A lightweight cognitive memory and ethics engine for agentic AI â€” persistent recall, auditable ethics, and modular design for trustworthy, context-aware agents."
authors = ["Janay <janayharris@synaptik-core.dev>"]

[lib]
path = "src/lib.rs"

[dependencies]
anyhow      = "1.0.86"
serde       = { version = "1.0.208", features = ["derive"] }
serde_json  = "1.0.124"
toml        = "0.8.19"
rusqlite    = { version = "0.31", features = ["bundled"] }
blake3      = "1.5.0"
chrono      = { version = "0.4", features = ["serde"] }
contracts   = { path = "../contracts" }
once_cell             = "1.19"
summary = "0.1.0"
tracing = "0.1"
uuid = { version = "1", features = ["v4"] }

[features]
# Experimental host-side WASM contract execution path. This does not yet provide
# full ABI marshalling; enabling it will attempt to exercise the sandbox stub if
# the contracts crate was built with its `wasm` feature and the runtime config flag is true.
wasm-contracts = []

[dev-dependencies]
sysinfo = "0.30"
crossbeam-channel = "0.5"
rand = "0.8"
tempfile = "3.10"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies.contracts]
path = "../contracts"
features = ["wasm_host"]

[[bench]]
name = "load_ingest"
harness = false
